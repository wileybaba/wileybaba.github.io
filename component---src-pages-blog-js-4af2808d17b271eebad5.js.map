{"version":3,"sources":["webpack:///./src/components/base.js","webpack:///./src/components/PostListing.js","webpack:///./src/pages/blog.js"],"names":["Card","styled","h1","props","theme","colors","headingColor","div","cardBackground","CardGrid","main","columns","BookCard","Tag","Listing","article","textColor","PostListing","postEdges","postList","forEach","postEdge","push","path","node","frontmatter","slug","title","date","excerpt","getPostList","map","post","to","key","style","textDecoration","marginBottom","margin","pageQuery","BlogPage","data","allMarkdownRemark","edges"],"mappings":"2FAAA,wJAKaA,GAHUC,UAAOC,GAAV,oEAAGD,CAAH,gBACT,SAACE,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,gBAErBL,UAAOM,IAAV,iEAAGN,CAAH,iSAMD,SAACE,GAAD,OAAWA,EAAMC,MAAMC,OAAOG,mBAsBjCC,EAAWR,UAAOS,KAAV,qEAAGT,CAAH,8JAEc,SAACE,GAAD,uBAAWA,EAAMQ,eAAjB,QAA4B,KASlDC,EAAWX,kBAAOD,GAAV,qEAAGC,CAAH,qaAyCRY,EAAMZ,UAAOM,IAAV,gEAAGN,CAAH,4L,4JChFVa,EAAUb,UAAOc,QAAV,2EAAGd,CAAH,iDAIE,SAACE,GAAD,OAAWA,EAAMC,MAAMY,aAuDvBC,EAlDK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAkBfC,EAjBc,WAClB,IAAMA,EAAW,GAajB,OAZAD,EAAUE,SAAQ,SAACC,GACjBF,EAASG,KAAK,CACZC,KAAMF,EAASG,KAAKC,YAAYC,KAIhCC,MAAON,EAASG,KAAKC,YAAYE,MACjCC,KAAMP,EAASG,KAAKC,YAAYG,KAChCC,QAASR,EAASG,KAAKK,aAIpBV,EAGQW,GACjB,OACE,6BAGIX,EAASY,KAAI,SAACC,GAAD,OACX,kBAAC,OAAD,CACEC,GAAID,EAAKT,KACTW,IAAKF,EAAKL,MACVQ,MAAO,CAAEC,eAAgB,SAEzB,kBAAC,IAAD,CAAMD,MAAO,CAAEE,aAAc,SAC3B,kBAACvB,EAAD,KACE,wBACEqB,MAAO,CACLC,eAAgB,6BAChBE,OAAQ,MAGTN,EAAKL,OAER,2BAAIK,EAAKJ,MACT,2BAAII,EAAKH,iB,YC1BZU,EAAS,aAmBPC,UA1BE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKd,MAAM,SACX,kBAAC,EAAD,CAAaT,UAAWuB,EAAKC,kBAAkBC","file":"component---src-pages-blog-js-4af2808d17b271eebad5.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Heading = styled.h1`\n  color: ${(props) => props.theme.colors.headingColor};\n`;\nexport const Card = styled.div`\n  align-content: baseline;\n  width: auto;\n  height: fit-content;\n  padding: 1rem;\n  border-radius: 5px;\n  background: ${(props) => props.theme.colors.cardBackground};\n  transition: all 0.5s ease-out;\n  box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\n  }\n\n  &:hover {\n    transform: scale(1.02)\n  }\n\n  h1 {\n    font-size: 1.5em;\n    margin: 1rem 0 0 0;\n  }\n  h2 {\n    font-size: 1.2em;\n  }\n  p {\n    margin: 0;\n    font-size: 1em;\n  }\n`;\n\nexport const CardGrid = styled.main`\n  display: grid;\n  grid-template-columns: 'repeat(${(props) => props.columns ?? 2}, 1fr';\n  grid-gap: 1.5rem;\n\n  @media only screen and (max-width: 600px) {\n    grid-template-columns: auto;\n    grid-gap: 1rem;\n  }\n`;\n\nexport const BookCard = styled(Card)`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-areas:\n    'image title'\n    'image description';\n  grid-template-columns: 150px auto;\n\n  div {\n    grid-area: title;\n  }\n  h1 {\n    font-size: 1.5em;\n    margin: 0;\n  }\n  h2 {\n    font-size: 1.2em;\n  }\n  p {\n    margin: 0;\n    font-size: 1em;\n    grid-area: description;\n  }\n\n  img {\n    width: 150px;\n    grid-area: image;\n  }\n\n  @media only screen and (max-width: 760px) {\n    grid-template-areas:\n      'image title'\n      'description description';\n    grid-template-columns: 75px auto;\n\n    img {\n      width: 75px;\n    }\n  }\n`;\n\nexport const Tag = styled.div`\n  font-family: 'Helvetica Neue';\n  font-size: 1em;\n  font-weight: 600;\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  /* background: ${(props) => props.backgroundColor ?? 'azure'}; */\n  background: linear-gradient(\n    201deg,\n    rgba(0, 250, 154, 1) 3%,\n    rgba(30, 144, 255, 1) 56%\n  );\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { Card } from './base';\n\nconst Listing = styled.article`\n  a {\n    text-decoration: none;\n    &:hover {\n      color: ${(props) => props.theme.textColor};\n    }\n  }\n`;\n\nconst PostListing = ({ postEdges }) => {\n  const getPostList = () => {\n    const postList = [];\n    postEdges.forEach((postEdge) => {\n      postList.push({\n        path: postEdge.node.frontmatter.slug,\n        // tags: postEdge.node.frontmatter.tags,\n        // categories: postEdge.node.frontmatter.categories,\n        // cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.frontmatter.date,\n        excerpt: postEdge.node.excerpt,\n        // timeToRead: postEdge.node.timeToRead,\n      });\n    });\n    return postList;\n  };\n\n  const postList = getPostList();\n  return (\n    <div>\n      {\n        /* Your post list here. */\n        postList.map((post) => (\n          <Link\n            to={post.path}\n            key={post.title}\n            style={{ textDecoration: 'none' }}\n          >\n            <Card style={{ marginBottom: '1rem' }}>\n              <Listing>\n                <h3\n                  style={{\n                    textDecoration: 'underline solid dodgerblue',\n                    margin: '0',\n                  }}\n                >\n                  {post.title}\n                </h3>\n                <p>{post.date}</p>\n                <p>{post.excerpt}</p>\n              </Listing>\n            </Card>\n          </Link>\n        ))\n      }\n    </div>\n  );\n};\n\nexport default PostListing;\n","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport styled from 'styled-components';\nimport Layout from '../components/layout';\nimport PostListing from '../components/PostListing';\nimport SEO from '../components/seo';\n\n// const FancyBox = styled.div`\n//   box-shadow: inset 0 0 10px #000000;\n//   padding: 1rem 2rem;\n//   width: fit-content;\n//   border-radius: 8px;\n//   p {\n//     font-size: 1em;\n//     line-height: 1em;\n//     margin: 0;\n//     color: ${(props) => props.theme.colors.pink};\n//   }\n// `;\n\nconst BlogPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"blog\" />\n    <PostListing postEdges={data.allMarkdownRemark.edges} />\n  </Layout>\n);\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { frontmatter: { draft: { eq: false } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          frontmatter {\n            slug\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`;\nexport default BlogPage;\n"],"sourceRoot":""}